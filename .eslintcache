[{"/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/index.js":"1","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/App.js":"2","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/reportWebVitals.js":"3","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/utils/setAuthToken.js":"4","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Notifications.js":"5","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/auth/Signup.js":"6","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/auth/Login.js":"7","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/chat/Chat.js":"8","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Navbar.js":"9","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/LandingPage.js":"10","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Footer.js":"11","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Sort.js":"12","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/chat/useChat.js":"13","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/ImageUpload.js":"14","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Image.js":"15","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Others.js":"16","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Response.js":"17","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/ImageUploadRegister.js":"18","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/ShowNotifs.js":"19","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Swipe.js":"20","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/DisplayOthers.js":"21"},{"size":539,"mtime":1612298661380,"results":"22","hashOfConfig":"23"},{"size":2951,"mtime":1612298661376,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1612298661380,"results":"25","hashOfConfig":"23"},{"size":555,"mtime":1612298661381,"results":"26","hashOfConfig":"23"},{"size":3856,"mtime":1612298661378,"results":"27","hashOfConfig":"23"},{"size":8522,"mtime":1612298661379,"results":"28","hashOfConfig":"23"},{"size":2725,"mtime":1612298661379,"results":"29","hashOfConfig":"23"},{"size":2632,"mtime":1612298661379,"results":"30","hashOfConfig":"23"},{"size":2977,"mtime":1612298661378,"results":"31","hashOfConfig":"23"},{"size":376,"mtime":1612298661378,"results":"32","hashOfConfig":"23"},{"size":278,"mtime":1612298661377,"results":"33","hashOfConfig":"23"},{"size":1200,"mtime":1612298661379,"results":"34","hashOfConfig":"23"},{"size":1455,"mtime":1612298661379,"results":"35","hashOfConfig":"23"},{"size":3197,"mtime":1612298661377,"results":"36","hashOfConfig":"23"},{"size":866,"mtime":1612298661377,"results":"37","hashOfConfig":"23"},{"size":337,"mtime":1612298661378,"results":"38","hashOfConfig":"23"},{"size":2587,"mtime":1612298661378,"results":"39","hashOfConfig":"23"},{"size":2265,"mtime":1612298661377,"results":"40","hashOfConfig":"23"},{"size":2906,"mtime":1612298661378,"results":"41","hashOfConfig":"23"},{"size":4289,"mtime":1612298661379,"results":"42","hashOfConfig":"23"},{"size":1351,"mtime":1612298661377,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"xlunmx",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"46"},"/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/index.js",[],["99","100"],"/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/App.js",["101"],"import Axios from 'axios'\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport './App.css';\nimport './Profile.css';\nimport './Navbar.css';\n\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport LandingPage from './components/LandingPage'\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\n// import About from './Components/About';\nimport Notifications from \"./components/Notifications\"\nimport Chat from \"./components/chat/Chat\"\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const user = localStorage.getItem('jwtToken');\n  return <Route {...rest } render={(props) => {\n    return user ? <Component { ...rest } { ...props }/> : <Redirect to=\"/login\" />\n  }}/>\n}\n\nfunction App() {\n  // Set state values\n  const [currentUser, setCurrentUser] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n\n\n  \n\n\n\n  useEffect(() => {\n\n    let token;\n    // if there is no token in localStorage, then the user is in authenticated\n    if (!localStorage.getItem('jwtToken')) {\n      setIsAuthenticated(false);\n    } else {\n      token = jwt_decode(localStorage.getItem('jwtToken'));\n      setAuthToken(localStorage.jwtToken);\n      setCurrentUser(token);\n    }\n  }, []);\n\n  const nowCurrentUser = (userData) => {\n    // console.log('nowCurentUser is here...');\n    setCurrentUser(userData);\n    setIsAuthenticated(true);\n  }\n\n  const handleLogout = () => {\n    const info = {\n      email: currentUser.email,\n      online: false\n    }\n    Axios.post(`${REACT_APP_SERVER_URL}/api/users/profile/status`, info)\n    if (localStorage.getItem('jwtToken')) {\n      localStorage.removeItem('jwtToken');\n      setCurrentUser(null);\n      setIsAuthenticated(false);\n      return  <Redirect to=\"/\" />\n    }\n  }\n\n  const notification = currentUser ? `/chat/${currentUser.id}` : null\n\n  return (\n    <div className=\"App\">\n      <Navbar handleLogout={handleLogout} isAuth={isAuthenticated} user={currentUser} />\n      <div className=\"container mt-5\">\n        <Switch>\n          <Route path='/signup' component={Signup} />\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route \n            path='/login' \n            render={ (props) => <Login {...props} nowCurrentUser={nowCurrentUser} setIsAuthenticated={setIsAuthenticated} user={currentUser}/>} />\n          {/* <PrivateRoute path=\"/profile\" component={ Profile } user={currentUser}/> */}\n          <Route exact path=\"/chat\" component={Chat} user={currentUser}/>\n          <PrivateRoute exact path=\"/chat/:roomId\" component={Notifications}  user={currentUser} />\n         \n        \n        </Switch>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/reportWebVitals.js",[],"/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/utils/setAuthToken.js",[],"/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Notifications.js",["102","103","104","105","106","107","108","109"],"\nimport Axios from 'axios'\nimport React, { useEffect, useState } from \"react\";\nimport useChat from \"./chat/useChat\";\nimport Sort from './Sort'\nimport ImageUpload from './ImageUpload'\nimport Image from './Image'\nimport Others from './Others'\nimport Response from './Response'\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nconst Notifications = (props) => {\n  // console.log(props.user)\n  const  { roomId } = props.match.params; \n  const user = props.user.name// Gets roomId from URL\n  const { messages, sendMessage } = useChat(roomId, user); // Creates a websocket and manages messaging\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [account, setAccount] = useState([]);\n  const [pic, setPic] = useState(false);\n  const [info, setInfo] = useState([]);\n  const [reload, setReload] = useState('')\n\n  // get random user\n  const getRandomUser = () => {\n\n    let route;\n\n    if (props.user.preference !== 'Both') {\n      route = `${REACT_APP_SERVER_URL}/api/users/users/${props.user.gender}/${props.user.preference}/${props.user.email}/${props.user.location}`\n    } else {\n      route = `${REACT_APP_SERVER_URL}/api/users/users/random/${props.user.gender}/${props.user.email}/${props.user.location}`\n    }\n  \n  \n  \n\n      Axios.get(route)\n\n      .then(res => {\n        // console.log(res.data.profile)\n        setAccount(res.data.profile)\n      \n      }) .catch(err => {\n        // console.log(err);\n    })\n  }\n\n  \n  function getMyInfo (route){\n    if(!props.user.email){\n      return\n    }\n    \n    Axios.get(route)\n    .then(res =>{\n      // console.log(props.user.email)\n      // console.log(res.data)\n      setInfo(res.data.user[0])\n      // console.log(info) \n      \n    })\n    .catch(err=>{\n        // console.log(err)\n    })\n  }\n  \n  useEffect(() => {\n    getRandomUser()\n    getMyInfo (`${REACT_APP_SERVER_URL}/api/users/myinfo/${props.user.email}`)\n    // setInterval(updateScroll,1000);\n    // document.querySelector('.chat-room-container').addEventListener('scroll', function(){\n    //   setScrolled(true);\n  // });\n  }, [props.user.email])\n\n  // console.log(info);\n  // const information = info && info.length ? info : ''\n  return (\n    <div id=\"master\">\n  <div id=\"profile\">\n  <Image email={props.user.email} pic={pic}/>\n  <div id=\"showNotifsDiv\">\n    <ImageUpload email={props.user.email} pic={setPic}/>\n    <Others user={props.user} info={info} email={props.user.email} pic={setPic}  pic={pic}/>\n  </div>\n  </div>\n    <div id=\"swipe\">\n  \n  <Sort user={account} me={props.user.name} id={props.user.id} email={props.user.email} status={info.online} pic={info.image_url} toggle={getRandomUser} messages={messages}/>\n  </div>\n \n        <div className=\"chat-room-container\" id=\"notify\" >\n      <div className=\"messages-container\">\n        <div className=\"messages-list\">\n          {messages.map((message, i) => (\n           \n            <p\n              key={i}\n              className={`message-item ${\n                message.ownedByCurrentUser ? \"my-message\" : \"received-message\"\n              }`}\n            > \n              {/* { props.user.id === roomId ? */}\n              \n              <div >\n                \n                <div class=\"chatBox\">\n                <img className=\"profilePic\" src={message.image}/>\n                  <p>{message.senderId}</p>\n              <p> {message.body}</p>\n              \n              \n              </div>\n              <div class=\"chatBox they-say\">\n                <Response room={message.id} name={props.user.name} id ={props.user.id} email={account.email} type={message.type} pic={info.image_url} reload={setReload}/>\n                </div>\n              </div> \n              {/* :  */}\n              <div></div>\n              {/* } */}\n            </p>\n          ))}\n        </div>\n      </div>\n    \n    </div>\n  \n\n    \n  </div>\n)};\n\nexport default Notifications;","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/auth/Signup.js",[],"/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/auth/Login.js",[],"/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/chat/Chat.js",["110","111","112","113","114"],"import React,{useState} from \"react\";\nimport useChat from \"./useChat\"\nimport axios from 'axios'\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nconst Chat = (props) => {\n  /////////////////////\n  \n  const roomId = props.room\n  const user = props.me // Gets roomId from URL\n  const id = props.room\n  const type =\"chat\"\n  const image =props.pic\n  const time = Date.now()\n  // console.log(props)\n  const { messages, sendMessage } = useChat(roomId, user, id, type, image); // Creates a websocket and manages messaging\n  const [newMessage, setNewMessage] = useState(``);\n \n  /////////////////////\n    const [text, setText] = useState(\"\");\n    const handleRoomNameChange = (event) => {\n    setText(event.target.value);\n  };\n\nprops.reload(messages)\nconst handleSendMessage = (e) => {\n  if(newMessage === ''){\n    return\n  }\n\n  \n  sendMessage(newMessage);\n  setNewMessage(e.target.value);\n  \n  const notificationData = {\n    id: props.id,\n    content: `Missed message: ${newMessage}`,\n    date: Date.now(),\n    my_id: props.saveMessage,\n    type: 'chat',\n    read: false,\n    pic: props.pic,\n    email: props.email,\n    name: props.me\n  }\n\n  axios.post(`${REACT_APP_SERVER_URL}/api/users/notifications`, notificationData)\n  .then(res => {\n    // console.log(`message to ${props.saveMessage}`)\n  }).catch(err => {\n    // console.log(err);\n  })\n  \n\n};\n\nconst handleNewMessageChange = (event) => {\n  \n  setNewMessage(event.target.value);\n \n};\n\n  return (\n    \n    <div className=\"home-container\">\n    \n  {messages.map((message, i) => (\n    \n    <div >\n    <p\n      key={i}\n      className={`message-item ${\n        message.ownedByCurrentUser ? \"my-message\" : \"received-message\"\n      }`}\n    > \n      <div>\n      </div>\n      <div className=\"chat-div\" >\n      { props.me === message.senderId?\n      <div className=\"youSay\">\n            <img className=\"iconPic\" src={message.image}/>\n            <p className=\"chat-body\"> {message.body}</p>  \n      </div>\n      :\n      <div className=\"they-say\">\n          <img className=\"iconPic\" src={message.image}/>\n          <p className=\"chat-names\">{message.senderId}</p>\n          <p className=\"chat-body\"> {message.body}</p>\n      </div>\n} \n     </div>\n    </p>\n\n    </div>\n  )\n)\n}\n\n\n<div id={messages.time}>\n      <input\n        className=\"imputtowa\"\n        type=\"text\"\n        placeholder=\"enter message\"\n        value={newMessage}\n        onChange={handleNewMessageChange}\n        // className=\"text-input-field\"\n      />\n      <button className=\"send\" id={props.room+props.me}onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n    \n  );\n  \n};\n\nexport default Chat;","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Navbar.js",[],"/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/LandingPage.js",["115"],"function LandingPage() {\n    return(\n        <div>\n         \n                <div>\n                    <h1 className=\"landing-header\">Token</h1>\n                    <img className=\"landing-pic\" src=\"https://res.cloudinary.com/dok4pz3i3/image/upload/v1611757637/foptixzgdufugkds2vgg.jpg\"></img>\n                </div>\n      \n\n        </div>\n    )\n}\n\nexport default LandingPage;","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Footer.js",[],"/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Sort.js",["116"],"import React, { useState, useEffect} from 'react'\nimport Swipe from './Swipe'\nimport ShowNotifs from './ShowNotifs'\nimport axios from 'axios';\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Sort(props) {\n\nconst [alerts, setAlerts]= useState([]) \nconst [refresh, setRefresh] = useState('')\n  \n// console.log(props.status)\n\nuseEffect(()=>{\n    axios.get(`${REACT_APP_SERVER_URL}/api/users/myinfo/${props.email}`).\n    then(res=>{\n        setAlerts(res.data.user[0].notifications)\n    }).catch(err=>{\n        // console.log(err)\n    })\n\n\n    // console.log(props.email)\n}, [props.email, props.messages, refresh])\n\nconst randomUser = props.user ? props.user : ''\n// console.log(randomUser)\n    return(\n        <div id=\"here\" >\n       \n        \n         \n         \n             \n           <div id=\"home\">\n           <Swipe toggle={props.toggle} user={randomUser} pic={props.pic} id={props.id} me={props.me} room={props.user._id}/>\n              </div>\n              <div id=\"red\">\n         <ShowNotifs alerts={alerts} me={props.me} my_email={props.email} pic={props.pic} messages={props.messages} refresh={setRefresh} />\n         </div>\n   \n</div>\n    )\n}\n\nexport default Sort;","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/chat/useChat.js",[],"/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/ImageUpload.js",[],"/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Image.js",["117","118","119","120"],"import Axios from 'axios'\nimport { useState, useEffect } from 'react'\n\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Image (props) {\n    const [pic, setPic]=useState(props.pic)\n    const[photo, setPhoto]=useState([])\n    \n    function getImage(url){\n        if(!props.email){\n            return\n        }\n        Axios.get(url)\n        .then(res=>{\n            // console.log(res.data)\n            setPhoto(res.data.user[0].image_url)\n            console.log('hi!!!!')\n           })\n        .catch(err=>{\n            // console.log(err)\n        })\n    }\n\n\n    useEffect (()=>{\n        getImage(`${REACT_APP_SERVER_URL}/api/users/myphoto/${props.email}`)\n\n    },[props.email, props.pic])\n   \n \n        return(\n            <div>\n                <img className=\"profilePic\" src={photo}/>\n            </div>\n        )\n}\n\nexport default Image;","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Others.js",["121"],"import DisplayOthers from './DisplayOthers'\n\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Others (props){\n  // console.log(props.user)\n\n    return(\n        <div>\n          <h5 id=\"name-on-prof\">{props.user.name}</h5>\n          <DisplayOthers info={props.info} />\n        </div>\n    )\n}\n\nexport default Others","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Response.js",["122","123"],"import useChat from \"./chat/useChat\";\nimport Chat from \"./chat/Chat\"\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Response (props){\n    \n    const roomId = props.room; \n    const user = props.name // Gets roomId from URL\n    const id = props.id\n    const type = \"chat\"\n    const image = props.pic\n \n    const { messages, sendMessage } = useChat(roomId, user, id, type, image ); // Creates a websocket and manages messaging\n    const [newMessage, setNewMessage] = useState(\"Let's Chat\");\n \n    const handleSendMessage = () => {\n     \n        document.getElementById(`${props.room}`).style.display=\"block\"\n        document.getElementById(`${props.room+props.id}`).style.display=\"none\"\n        // console.log(props.email);\n        sendMessage(newMessage);\n        setNewMessage(\"liked\");\n        props.reload(\"me\")\n        props.reload(\"you\")\n/////////////////////////////////////\nconst notificationData = {\n    id: props.id,\n    content: `${props.name} wants to chat`,\n    date: Date.now(),\n    my_id: props.room,\n    type: 'chat',\n    read: false,\n    pic: props.pic,\n    email: props.email,\n    name: props.name\n  }\n\n  axios.post(`${REACT_APP_SERVER_URL}/api/users/notifications`, notificationData)\n  .then(res => {\n    // console.log(res);\n  }).catch(err => {\n    // console.log(err);\n  })\n//////////////////////////////////////////////////////////////////\n};\n    \n  \n    const handleChat =()=>{\n        document.getElementById(`${props.room}`).style.display=\"block\"\n    }\n \n  return (\n       <div>\n            \n           {\n            props.type===\"chat\" ?\n       \n              \n                <div className=\"blue\" id={props.room}>\n                  \n                     <Chat  room={props.id+props.room} me={props.name} id={props.id} type={\"chat\"} pic={props.pic} reload={props.reload} saveMessage={props.room} />\n                     {/* <button onClick={handleChat}>Initiate Chat</button> */}\n                </div>\n              \n                \n               :\n                <div>\n                    <div className=\"chat\" id={props.room}>\n                        <Chat saveMessage={props.room} chat={handleChat} room={props.room+props.id} me={props.name} id={props.id} type={\"chat\"} pic={props.pic} reload={props.reload}/>\n                    </div>\n                    <button  id={props.room+props.id} onClick={handleSendMessage}>Chat</button>\n                </div>\n\n           }\n           \n            \n       </div>\n       \n    )\n}\n\nexport default Response;","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/ImageUploadRegister.js",[],"/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/ShowNotifs.js",["124","125"],"import { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport Response from './Response'\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction ShowNotifs(props) {\n\n    const [alertsLength, setAlertsLength] = useState(props.alerts.length)\n    const [reload, setReload] = useState('')\n    // let alertsLength = 0\n   \n    const alerts = props.alerts.map((p, index) => {\n        const handleShowNotifDetails = () => {\n            if (p.read === true) {\n                setAlertsLength(alertsLength - 1)\n            }\n            // console.log(p.email+index);\n            // if(!p.email[index]){\n\n            // }else{\n                document.getElementById(`${p.email+index}`).style.display=\"block\"\n            // }\n           \n\n            const userData = {\n                email: p.email,\n                id: p._id,\n                user: p.my_id\n            }\n           \n            Axios.post(`${REACT_APP_SERVER_URL}/api/users/notifications/read`, userData)\n            .then(res => {\n                props.refresh('auth token')\n                props.refresh('app.js')\n                \n            }).catch(err => {\n                // console.log(err)\n            })\n        }\n\n    \n        return(\n            <div>\n                { p.read === false ? \n                <div>\n                    \n                    <img src={p.pic} className=\"iconPic\" />\n                    <button className=\"yourName\" onClick={handleShowNotifDetails}>Hide</button>\n                    <p id={p.email+index} className=\"single-notif\">{p.content}</p>\n                    <div class=\"chatBox\">\n                        <Response reload={setReload} room={p.from_sender} name={props.me} id ={p.my_id} email={p.email} type={p.type} pic={props.pic}/>\n                    </div>\n                    <hr />\n                </div>\n                :\n                <div></div>\n                }\n            </div>\n        )\n    })\n\n    useEffect(() => {\n        setAlertsLength(props.alerts.length)\n\n        setAlertsLength(alertsLength - length)\n    }, [props, reload])\n\n    const handleShowNotifications = () => {\n\n        document.getElementById('my-alerts').style.display=\"block\"\n        document.getElementById('hide-notifs').style.display=\"block\"\n    }\n    const handleHideNotifications = () => {\n        document.getElementById('my-alerts').style.display=\"none\"\n        document.getElementById('hide-notifs').style.display=\"none\"\n    }\n\n    const length = props.alerts.filter(function(item){\n        return item.read;\n    }).length;\n\n    return(\n    <div>\n        <button id=\"notifyId\" onClick={handleShowNotifications}>Notifications ({props.alerts.length - length})</button>\n        <button id=\"hide-notifs\" onClick={handleHideNotifications}>Hide Notifications</button>\n        <div id=\"my-alerts\">\n            {alerts}\n        </div>\n    </div>\n    )\n}\n\nexport default ShowNotifs;","/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/Swipe.js",["126","127","128","129","130","131"],"import useChat from \"./chat/useChat\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TinderCard from 'react-tinder-card'\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Swipe(props) {\n  const [lastDirection, setLastDirection] = useState()\n  \n  \n    const roomId = props.user._id; \n    const user = props.me // Gets roomId from URL\n    const id = props.id\n    const type =\"swipe\"\n    const image =props.pic\n    const time = Date.now()\n    // console.log(props)\n    const { messages, sendMessage } = useChat(roomId, user, id, type, image, time); // Creates a websocket and manages messaging\n    const [newMessage, setNewMessage] = useState(`I like your profile!`);\n    // const [account, setAccount] = useState([]);\n    const [notifications, setNotifications] = useState([])\n \n  \n    const handleNewMessageChange = (event) => {\n      setNewMessage(event.target.value);\n      // console.log(props.user.name)\n      \n      // console.log(user + '!!!!!!')\n    };\n\n    \n  \n    const handleSendMessage = () => {\n      // document.getElementById(props.user.image_url).style.display=\"none\";\n      // console.log(roomId);\n      sendMessage(newMessage);\n      setNewMessage(`Your profile was liked by ${props.me}`);\n      // alert(\"Your like has been sent!!\")\n\n      const notificationData = {\n        id: props.id,\n        content: `${props.me} liked your profile!`,\n        date: Date.now(),\n        my_id: roomId,\n        type: 'swipe',\n        read: false,\n        pic: props.pic,\n        email: props.user.email,\n        name: props.me,\n        online: props.status\n      }\n      \n\n      axios.post(`${REACT_APP_SERVER_URL}/api/users/notifications`, notificationData)\n      .then(res => {\n        props.toggle()\n      //   console.log('swiped right')\n      //   console.log(res);\n      }).catch(err => {\n      //   console.log(err);\n      })\n    };\n\n    const handleSwipeChange = () =>{\n      // document.querySelector('.this').style.display=\"block\";\n      \n      props.toggle()\n      // console.log('swiped left')\n    }\n\n    const status = (status) => {\n      if(status === true) {\n        return 'Online'\n      } else {\n        return 'Offline'\n      }\n    }\n\n    const swiped = (direction, nameToDelete) => {\n      if (direction === 'left') {\n        handleSwipeChange()\n      } else {\n        handleSendMessage()\n      }\n      // console.log('removing: ' + nameToDelete)\n      setLastDirection(direction)\n    }\n  \n    const outOfFrame = (name) => {\n      // console.log(name + ' left the screen!')\n    }\n\n\n    // console.log(status)\n    return(\n      <div>\n        \n        {props.user.length===0\n            ?\n            <p>Sorry We Couldn't Find Anyone in your area!</p> \n            :\n          <div className=\"like-button\">\n            {/* <div className=\"like\">\n        <button className=\"swipe\" onClick={handleSwipeChange}>❌</button>\n        </div> */}\n          <div id=\"me\">\n            <div>\n              <div id='tinder'>\n                <TinderCard className='swipe' key={Date.now()} onSwipe={(dir) => swiped(dir, props.user.name)} onCardLeftScreen={() => outOfFrame(props.user.name)}>\n                <div>\n                  <img className={status(props.user.online)} src={props.user.image_url} />\n                </div>\n                </TinderCard>\n              </div>\n            \n          {/* {lastDirection ? <h2 className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText' />} */}\n          <div id=\"information\">\n          <p id=\"user-name\">{props.user.name}</p>\n          <div id=\"adduressu\">\n            <div id=\"swipe-info\">\n              <p>{props.user.age}</p> \n              <p>{props.user.bio}</p> \n              <p>{props.user.location}</p>\n              {/* <p>{props.user.gender}</p>  */}\n              {/* <p>Likes: {props.user.preference}</p> */}\n              <p>{status(props.user.online)}</p> \n            </div>\n          </div>\n          </div>\n          </div>\n        \n          </div>\n          {/* <div className=\"like\">\n          <button id={props.user.image_url} onClick={handleSendMessage} className=\"swipe this\">\n            💙\n          </button>\n          </div> */}\n          </div>\n            \n        }\n            \n        </div>\n    )\n}\n\nexport default Swipe;",["132","133"],"/Users/User/Desktop/Portfolio/token-front-end/SEI-project4-frontend/src/components/DisplayOthers.js",["134"],"import { useEffect, useState } from 'react'\n// import ShowNotifs from './ShowNotifs';\nimport Axios from 'axios'\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction DisplayOthers(props){\n\n    const [notifications, setNotifications] = useState([])\n\n    useEffect(()=> {\n\n        function getMyInfo(route) {\n            if(!props.info.email){\n              return\n            }\n            \n            Axios.get(route)\n            .then(res =>{\n            //   console.log(props.user.email)\n            //   console.log(res.data)\n              setNotifications(res.data.user[0].notifications)\n            //   console.log(info) \n            })\n            .catch(err=>{\n                // console.log(err)\n            })\n        }\n        // console.log(notifications);\n        getMyInfo (`${REACT_APP_SERVER_URL}/api/users/myinfo/${props.info.email}`)\n    }, [props])\n\n    return(\n        <div>\n             <div id=\"showNotifsDiv\">\n           \n            </div>\n            <div id=\"my-prof-info\">\n                <p>{props.info.age}</p>\n                <p>{props.info.bio}</p>\n                <p>{props.info.gender}</p>\n                <p> {props.info.location}</p>\n                <p id=\"preference\">Preference: {props.info.preference}</p>\n\n            </div>\n           \n        </div>\n    )\n}\n\nexport default DisplayOthers;",{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":70,"column":9,"nodeType":"141","messageId":"142","endLine":70,"endColumn":21},{"ruleId":"139","severity":1,"message":"143","line":17,"column":21,"nodeType":"141","messageId":"142","endLine":17,"endColumn":32},{"ruleId":"139","severity":1,"message":"144","line":18,"column":10,"nodeType":"141","messageId":"142","endLine":18,"endColumn":20},{"ruleId":"139","severity":1,"message":"145","line":18,"column":22,"nodeType":"141","messageId":"142","endLine":18,"endColumn":35},{"ruleId":"139","severity":1,"message":"146","line":22,"column":10,"nodeType":"141","messageId":"142","endLine":22,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":38,"column":7,"nodeType":"149","messageId":"150","endLine":44,"endColumn":16,"fix":"151"},{"ruleId":"152","severity":1,"message":"153","line":75,"column":6,"nodeType":"154","endLine":75,"endColumn":24,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":85,"column":82,"nodeType":"158","endLine":85,"endColumn":91},{"ruleId":"159","severity":1,"message":"160","line":109,"column":17,"nodeType":"161","endLine":109,"endColumn":66},{"ruleId":"139","severity":1,"message":"162","line":15,"column":9,"nodeType":"141","messageId":"142","endLine":15,"endColumn":13},{"ruleId":"139","severity":1,"message":"163","line":21,"column":12,"nodeType":"141","messageId":"142","endLine":21,"endColumn":16},{"ruleId":"139","severity":1,"message":"164","line":22,"column":11,"nodeType":"141","messageId":"142","endLine":22,"endColumn":31},{"ruleId":"159","severity":1,"message":"160","line":82,"column":13,"nodeType":"161","endLine":82,"endColumn":59},{"ruleId":"159","severity":1,"message":"160","line":87,"column":11,"nodeType":"161","endLine":87,"endColumn":57},{"ruleId":"159","severity":1,"message":"160","line":7,"column":21,"nodeType":"161","endLine":7,"endColumn":143},{"ruleId":"165","severity":1,"message":"166","line":16,"column":73,"nodeType":"149","messageId":"167","endLine":16,"endColumn":74,"fix":"168"},{"ruleId":"139","severity":1,"message":"169","line":8,"column":12,"nodeType":"141","messageId":"142","endLine":8,"endColumn":15},{"ruleId":"139","severity":1,"message":"170","line":8,"column":17,"nodeType":"141","messageId":"142","endLine":8,"endColumn":23},{"ruleId":"152","severity":1,"message":"171","line":30,"column":7,"nodeType":"154","endLine":30,"endColumn":31,"suggestions":"172"},{"ruleId":"159","severity":1,"message":"160","line":35,"column":17,"nodeType":"161","endLine":35,"endColumn":58},{"ruleId":"139","severity":1,"message":"173","line":4,"column":7,"nodeType":"141","messageId":"142","endLine":4,"endColumn":27},{"ruleId":"139","severity":1,"message":"174","line":3,"column":27,"nodeType":"141","messageId":"142","endLine":3,"endColumn":36},{"ruleId":"139","severity":1,"message":"175","line":15,"column":13,"nodeType":"141","messageId":"142","endLine":15,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":47,"column":21,"nodeType":"161","endLine":47,"endColumn":60},{"ruleId":"152","severity":1,"message":"176","line":66,"column":8,"nodeType":"154","endLine":66,"endColumn":23,"suggestions":"177"},{"ruleId":"139","severity":1,"message":"178","line":9,"column":10,"nodeType":"141","messageId":"142","endLine":9,"endColumn":23},{"ruleId":"139","severity":1,"message":"175","line":19,"column":13,"nodeType":"141","messageId":"142","endLine":19,"endColumn":21},{"ruleId":"139","severity":1,"message":"179","line":22,"column":12,"nodeType":"141","messageId":"142","endLine":22,"endColumn":25},{"ruleId":"139","severity":1,"message":"180","line":22,"column":27,"nodeType":"141","messageId":"142","endLine":22,"endColumn":43},{"ruleId":"139","severity":1,"message":"181","line":25,"column":11,"nodeType":"141","messageId":"142","endLine":25,"endColumn":33},{"ruleId":"159","severity":1,"message":"160","line":112,"column":19,"nodeType":"161","endLine":112,"endColumn":91},{"ruleId":"135","replacedBy":"182"},{"ruleId":"137","replacedBy":"183"},{"ruleId":"139","severity":1,"message":"179","line":9,"column":12,"nodeType":"141","messageId":"142","endLine":9,"endColumn":25},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'notification' is assigned a value but never used.","Identifier","unusedVar","'sendMessage' is assigned a value but never used.","'newMessage' is assigned a value but never used.","'setNewMessage' is assigned a value but never used.","'reload' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"186","text":"187"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getMyInfo' and 'getRandomUser'. Either include them or remove the dependency array.","ArrayExpression",["188"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'time' is assigned a value but never used.","'text' is assigned a value but never used.","'handleRoomNameChange' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","expectedDotBeforeProperty",{"range":"189","text":"190"},"'pic' is assigned a value but never used.","'setPic' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getImage'. Either include it or remove the dependency array.",["191"],"'REACT_APP_SERVER_URL' is assigned a value but never used.","'useEffect' is defined but never used.","'messages' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'alertsLength' and 'length'. Either include them or remove the dependency array. You can also do a functional update 'setAlertsLength(a => ...)' if you only need 'alertsLength' in the 'setAlertsLength' call.",["192"],"'lastDirection' is assigned a value but never used.","'notifications' is assigned a value but never used.","'setNotifications' is assigned a value but never used.","'handleNewMessageChange' is assigned a value but never used.",["184"],["185"],"no-global-assign","no-unsafe-negation",[1381,1383],".",{"desc":"193","fix":"194"},[437,443],"\n    .",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [getMyInfo, getRandomUser, props.user.email]",{"range":"199","text":"200"},"Update the dependencies array to be: [getImage, props.email, props.pic]",{"range":"201","text":"202"},"Update the dependencies array to be: [alertsLength, length, props, reload]",{"range":"203","text":"204"},[2059,2077],"[getMyInfo, getRandomUser, props.user.email]",[689,713],"[getImage, props.email, props.pic]",[2071,2086],"[alertsLength, length, props, reload]"]