[{"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/index.js":"1","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/App.js":"2","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/reportWebVitals.js":"3","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/utils/setAuthToken.js":"4","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Footer.js":"5","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Navbar.js":"6","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Notifications.js":"7","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/auth/Signup.js":"8","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/auth/Login.js":"9","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/chat/Chat.js":"10","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/chat/useChat.js":"11","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Sort.js":"12","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Swipe.js":"13","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/ImageUpload.js":"14","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Image.js":"15","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/ImageUploadRegister.js":"16","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Others.js":"17","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/DisplayOthers.js":"18","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Home.js":"19","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Response.js":"20","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/ShowNotifs.js":"21","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/NotificationParent.js":"22"},{"size":539,"mtime":1611166213522,"results":"23","hashOfConfig":"24"},{"size":2698,"mtime":1611447647788,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1611166213523,"results":"26","hashOfConfig":"24"},{"size":549,"mtime":1611166213523,"results":"27","hashOfConfig":"24"},{"size":278,"mtime":1611429078315,"results":"28","hashOfConfig":"24"},{"size":3054,"mtime":1611588596356,"results":"29","hashOfConfig":"24"},{"size":4417,"mtime":1611592149931,"results":"30","hashOfConfig":"24"},{"size":6685,"mtime":1611359257429,"results":"31","hashOfConfig":"24"},{"size":2548,"mtime":1611429078539,"results":"32","hashOfConfig":"24"},{"size":1853,"mtime":1611588692174,"results":"33","hashOfConfig":"24"},{"size":1455,"mtime":1611366943339,"results":"34","hashOfConfig":"24"},{"size":314,"mtime":1611588649556,"results":"35","hashOfConfig":"24"},{"size":2583,"mtime":1611545560945,"results":"36","hashOfConfig":"24"},{"size":3113,"mtime":1611588583262,"results":"37","hashOfConfig":"24"},{"size":854,"mtime":1611520857699,"results":"38","hashOfConfig":"24"},{"size":2066,"mtime":1611588661821,"results":"39","hashOfConfig":"24"},{"size":295,"mtime":1611588641289,"results":"40","hashOfConfig":"24"},{"size":625,"mtime":1611588571436,"results":"41","hashOfConfig":"24"},{"size":794,"mtime":1611200767198,"results":"42","hashOfConfig":"24"},{"size":2443,"mtime":1611545045178,"results":"43","hashOfConfig":"24"},{"size":2636,"mtime":1611589209636,"results":"44","hashOfConfig":"24"},{"size":917,"mtime":1611592249130,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"10xcvf0",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/index.js",[],["98","99"],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/App.js",["100","101","102"],"import Axios from 'axios'\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport './App.css';\nimport './Profile.css';\nimport './Navbar.css';\n\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\n\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\n// import About from './Components/About';\nimport Notifications from \"./components/Notifications\"\nimport Chat from \"./components/chat/Chat\"\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const user = localStorage.getItem('jwtToken');\n  return <Route {...rest } render={(props) => {\n    return user ? <Component { ...rest } { ...props }/> : <Redirect to=\"/login\" />\n  }}/>\n}\n\nfunction App() {\n  // Set state values\n  const [currentUser, setCurrentUser] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n\n\n  \n\n\n\n  useEffect(() => {\n\n    let token;\n    // if there is no token in localStorage, then the user is in authenticated\n    if (!localStorage.getItem('jwtToken')) {\n      setIsAuthenticated(false);\n    } else {\n      token = jwt_decode(localStorage.getItem('jwtToken'));\n      setAuthToken(localStorage.jwtToken);\n      setCurrentUser(token);\n    }\n  }, []);\n\n  const nowCurrentUser = (userData) => {\n    console.log('nowCurentUser is here...');\n    setCurrentUser(userData);\n    setIsAuthenticated(true);\n  }\n\n  const handleLogout = () => {\n    if (localStorage.getItem('jwtToken')) {\n      localStorage.removeItem('jwtToken');\n      setCurrentUser(null);\n      setIsAuthenticated(false);\n      return  <Redirect to=\"/\" />\n    }\n  }\n\n  const notification = currentUser ? `/chat/${currentUser.id}` : null\n\n  return (\n    <div className=\"App\">\n      <Navbar handleLogout={handleLogout} isAuth={isAuthenticated} user={currentUser} />\n      <div className=\"container mt-5\">\n        <Switch>\n          <Route path='/signup' component={Signup} />\n        \n          <Route \n            path='/login' \n            render={ (props) => <Login {...props} nowCurrentUser={nowCurrentUser} setIsAuthenticated={setIsAuthenticated} user={currentUser}/>} />\n          {/* <PrivateRoute path=\"/profile\" component={ Profile } user={currentUser}/> */}\n          <Route exact path=\"/chat\" component={Chat} user={currentUser}/>\n          <PrivateRoute exact path=\"/chat/:roomId\" component={Notifications}  user={currentUser} />\n         \n        \n        </Switch>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/reportWebVitals.js",[],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/utils/setAuthToken.js",[],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Footer.js",[],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Navbar.js",[],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Notifications.js",["103","104","105","106","107","108","109","110"],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/auth/Signup.js",[],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/auth/Login.js",[],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/chat/Chat.js",["111","112","113","114"],"import React,{useState} from \"react\";\nimport useChat from \"./useChat\"\n\nconst Chat = (props) => {\n  /////////////////////\n  const roomId = props.room\n  const user = props.me // Gets roomId from URL\n  const id = props.room\n  const type =\"chat\"\n  const image =props.pic\n\n  // console.log(props)\n  const { messages, sendMessage } = useChat(roomId, user, id, type, image); // Creates a websocket and manages messaging\n  const [newMessage, setNewMessage] = useState(``);\n \n  /////////////////////\n    const [text, setText] = useState(\"\");\n    const handleRoomNameChange = (event) => {\n    setText(event.target.value);\n  };\n\n\nconst handleSendMessage = (e) => {\n\n \n  sendMessage(newMessage);\n  setNewMessage(e.target.value);\n \n\n};\n\nconst handleNewMessageChange = (event) => {\n  setNewMessage(event.target.value);\n \n};\n\n  return (\n    <div className=\"home-container\">\n    \n  {messages.map((message, i) => (\n    <div>\n    <p\n      key={i}\n      className={`message-item ${\n        message.ownedByCurrentUser ? \"my-message\" : \"received-message\"\n      }`}\n    > \n    \n      <div >\n       \n      { props.me === message.senderId?\n      <div className=\"youSay\">\n            <img className=\"iconPic\" src={message.image}/>\n            <p> {message.body}</p>\n          \n      </div>\n      :\n      <div>\n          <img className=\"iconPic\" src={message.image}/>\n          <p>{message.senderId} says:</p>\n          <p> {message.body}</p>\n        \n      </div>\n} \n\n \n\n     \n    \n     </div>\n    \n    \n    </p>\n   \n\n    </div>\n\n  ))}\n\n\n<div id={messages.time}>\n      <input\n        type=\"text\"\n        placeholder=\"enter message\"\n        value={newMessage}\n        onChange={handleNewMessageChange}\n        className=\"text-input-field\"\n      />\n      <button className=\"send\" onClick={handleSendMessage}>Send</button>\n   \n      </div>\n\n    </div>\n  );\n};\n\nexport default Chat;","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/chat/useChat.js",[],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Sort.js",[],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Swipe.js",["115","116","117","118","119"],"import useChat from \"./chat/useChat\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Swipe(props) {\n  \n  console.log(props.id)\n    const roomId = props.user._id; \n    const user = props.me // Gets roomId from URL\n    const id = props.id\n    const type =\"swipe\"\n    const image =props.pic\n    const time = Date.now()\n    // console.log(props)\n    const { messages, sendMessage } = useChat(roomId, user, id, type, image, time); // Creates a websocket and manages messaging\n    const [newMessage, setNewMessage] = useState(`I like your profile!`);\n    // const [account, setAccount] = useState([]);\n    const [notifications, setNotifications] = useState([])\n \n  \n    const handleNewMessageChange = (event) => {\n      setNewMessage(event.target.value);\n      // console.log(props.user.name)\n      // console.log(user + '!!!!!!')\n    };\n  \n    const handleSendMessage = () => {\n      document.getElementById(props.user.image_url).style.display=\"none\";\n      // console.log(roomId);\n      sendMessage(newMessage);\n      setNewMessage(`Your profile was liked by ${props.me}`);\n      // alert(\"Your like has been sent!!\")\n\n      const notificationData = {\n        id: props.id,\n        content: `${props.me} liked your profile!`,\n        date: Date.now(),\n        my_id: roomId,\n        type: 'swipe',\n        read: false,\n        pic: props.pic,\n        email: props.user.email,\n        name: props.me\n      }\n      console.log('i am frontend email', props.email);\n\n      axios.post(`${REACT_APP_SERVER_URL}/api/users/notifications`, notificationData)\n      .then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      })\n    };\n\n    const handleSwipeChange = () =>{\n      document.querySelector('.this').style.display=\"block\";\n      \n      props.toggle()\n   \n    }\n    \n    return(\n      <div>\n        <div className=\"like-button\">\n        <button className=\"swipe\" onClick={handleSwipeChange}>Swipe</button>\n          <div id=\"me\">\n          <img className=\"profilePic\" src={props.user.image_url} />\n          \n          <p id=\"user-name\">{props.user.name}</p>\n          <p>Age: {props.user.age}</p> \n          <p>Bio: {props.user.bio}</p> \n          <p>Gender: {props.user.gender}</p> \n          <p>Likes: {props.user.preference}</p> \n          </div>\n          <button id={props.user.image_url} onClick={handleSendMessage} className=\"swipe this\">\n            Like\n          </button>\n          \n        </div>\n        </div>\n    )\n}\n\nexport default Swipe;","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/ImageUpload.js",[],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Image.js",["120","121"],"import Axios from 'axios'\nimport { useState, useEffect } from 'react'\n\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Image (props) {\n    const [pic, setPic]=useState(props.pic)\n    const[photo, setPhoto]=useState([])\n    \n    function getImage(url){\n        if(!props.email){\n            return\n        }\n        Axios.get(url)\n        .then(res=>{\n            // console.log(res.data)\n            setPhoto(res.data.user[0].image_url)\n            console.log('hi!!!!')\n           })\n        .catch(err=>{\n            // console.log(err)\n        })\n    }\n\n\nuseEffect (()=>{\n    getImage(`${REACT_APP_SERVER_URL}/api/users/myphoto/${props.email}`)\n\n},[props.email, props.pic])\n   \n \n        return(\n            <div>\n                <img className=\"profilePic\" src={photo}/>\n            </div>\n        )\n}\n\nexport default Image;","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/ImageUploadRegister.js",[],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Others.js",["122","123"],"\nimport React, {useState, useEffect} from 'react'\nimport DisplayOthers from './DisplayOthers'\n\n\n\n\nfunction Others (props){\n    return(\n        <div>\n          <h5 id=\"name-on-prof\">{props.user.name}</h5>\n          <DisplayOthers info={props.info} />\n        </div>\n    )\n}\n\nexport default Others","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/DisplayOthers.js",[],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Home.js",[],"/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/Response.js",["124","125"],"import useChat from \"./chat/useChat\";\nimport Chat from \"./chat/Chat\"\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Response (props){\n    \n    const roomId = props.room; \n    const user = props.name // Gets roomId from URL\n    const id = props.id\n    const type = \"chat\"\n    const image = props.pic\n \n    const { messages, sendMessage } = useChat(roomId, user, id, type, image ); // Creates a websocket and manages messaging\n    const [newMessage, setNewMessage] = useState(\"Let's Chat\");\n    \n    const handleSendMessage = () => {\n     \n        document.getElementById(`${props.room}`).style.display=\"block\"\n        document.getElementById('initiateChat').style.display=\"none\"\n        console.log(props.email);\n        sendMessage(newMessage);\n        setNewMessage(\"liked\");\n/////////////////////////////////////\nconst notificationData = {\n    id: props.id,\n    content: `${props.name} wants to chat`,\n    date: Date.now(),\n    my_id: props.room,\n    type: 'chat',\n    read: false,\n    pic: props.pic,\n    email: props.email,\n    name: props.name\n  }\n\n  axios.post(`${REACT_APP_SERVER_URL}/api/users/notifications`, notificationData)\n  .then(res => {\n    console.log(res);\n  }).catch(err => {\n    console.log(err);\n  })\n//////////////////////////////////////////////////////////////////\n};\n    \n    \n    \n    const handleChat =()=>{\n        document.getElementById(`${props.room}`).style.display=\"block\"\n    }\n \n\n   \n    \n   \n\n\n\n\n    \n  return (\n       <div>\n            \n           {\n            props.type===\"chat\" ?\n       \n              \n                <div className=\"blue\" id={props.room}>\n                  \n                     <Chat room={props.id+props.room} me={props.name} id={props.id} type={\"chat\"} pic={props.pic}/>\n                     {/* <button onClick={handleChat}>Initiate Chat</button> */}\n                </div>\n              \n                \n               :\n                <div>\n                    <div className=\"chat\" id={props.room}>\n                        <Chat chat={handleChat} room={props.room+props.id} me={props.name} id={props.id} type={\"chat\"} pic={props.pic}/>\n                    </div>\n                    <button  id=\"initiateChat\" onClick={handleSendMessage}>Chat</button>\n                </div>\n\n           }\n           \n            \n       </div>\n       \n    )\n}\n\nexport default Response;","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/ShowNotifs.js",["126","127"],"import { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport Response from './Response'\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction ShowNotifs(props) {\n    console.log(props)\n    const [alertsLength, setAlertsLength] = useState(props.alerts.length)\n    const alerts = props.alerts.map((p, index) => {\n        const handleShowNotifDetails = () => {\n            if (p.read === true) {\n                setAlertsLength(alertsLength - 1)\n            }\n    \n                document.getElementById(`${p.email+index}`).style.display=\"block\"\n  \n           \n\n            const userData = {\n                email: p.email,\n                id: p._id,\n                user: p.my_id\n            }\n            console.log(userData);\n            Axios.post(`${REACT_APP_SERVER_URL}/api/users/notifications/read`, userData)\n            .then(res => {\n                console.log(res);\n            }).catch(err => {\n                console.log(err)\n            })\n        }\n        return(\n            <div>\n                { p.read === false ? \n                <div>\n                    \n                    <img src={p.pic} className=\"iconPic\" />\n                    <button onClick={handleShowNotifDetails}>{p.name}</button>\n                    <p id={p.email+index} className=\"single-notif\">{p.content}</p>\n                    <div class=\"chatBox\">\n                        <Response room={p.from_sender} name={props.me} id ={p.my_id} email={p.email} type={p.type} pic={props.pic}/>\n                    </div>\n                    <hr />\n                </div>\n                :\n                <div></div>\n                }\n            </div>\n        )\n    })\n\n    useEffect(() => {\n        setAlertsLength(props.alerts.length)\n\n        setAlertsLength(alertsLength - length)\n    }, [props.alerts])\n\n    const handleShowNotifications = () => {\n\n        document.getElementById('my-alerts').style.display=\"block\"\n        document.getElementById('hide-notifs').style.display=\"block\"\n    }\n    const handleHideNotifications = () => {\n        document.getElementById('my-alerts').style.display=\"none\"\n        document.getElementById('hide-notifs').style.display=\"none\"\n    }\n\n    const length = props.alerts.filter(function(item){\n        return item.read;\n    }).length;\n\n    return(\n    <div>\n        <button onClick={handleShowNotifications}>Notifications ({props.alerts.length - length})</button>\n        <button id=\"hide-notifs\" onClick={handleHideNotifications}>Hide Notifications</button>\n        <div id=\"my-alerts\">\n            {alerts}\n        </div>\n    </div>\n    )\n}\n\nexport default ShowNotifs;","/Users/User/Desktop/SEI1019/unit_4/reveal/SEI-project4-frontend/src/components/NotificationParent.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"136","line":18,"column":7,"nodeType":"134","messageId":"135","endLine":18,"endColumn":27},{"ruleId":"132","severity":1,"message":"137","line":65,"column":9,"nodeType":"134","messageId":"135","endLine":65,"endColumn":21},{"ruleId":"132","severity":1,"message":"138","line":10,"column":8,"nodeType":"134","messageId":"135","endLine":10,"endColumn":18},{"ruleId":"132","severity":1,"message":"139","line":17,"column":21,"nodeType":"134","messageId":"135","endLine":17,"endColumn":32},{"ruleId":"132","severity":1,"message":"140","line":18,"column":10,"nodeType":"134","messageId":"135","endLine":18,"endColumn":20},{"ruleId":"132","severity":1,"message":"141","line":18,"column":22,"nodeType":"134","messageId":"135","endLine":18,"endColumn":35},{"ruleId":"142","severity":1,"message":"143","line":71,"column":7,"nodeType":"144","messageId":"145","endLine":76,"endColumn":16,"fix":"146"},{"ruleId":"147","severity":1,"message":"148","line":105,"column":6,"nodeType":"149","endLine":105,"endColumn":34,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":127,"column":17,"nodeType":"153","endLine":127,"endColumn":66},{"ruleId":"154","severity":1,"message":"155","line":154,"column":82,"nodeType":"156","endLine":154,"endColumn":91},{"ruleId":"132","severity":1,"message":"157","line":17,"column":12,"nodeType":"134","messageId":"135","endLine":17,"endColumn":16},{"ruleId":"132","severity":1,"message":"158","line":18,"column":11,"nodeType":"134","messageId":"135","endLine":18,"endColumn":31},{"ruleId":"151","severity":1,"message":"152","line":53,"column":13,"nodeType":"153","endLine":53,"endColumn":59},{"ruleId":"151","severity":1,"message":"152","line":59,"column":11,"nodeType":"153","endLine":59,"endColumn":57},{"ruleId":"132","severity":1,"message":"159","line":17,"column":13,"nodeType":"134","messageId":"135","endLine":17,"endColumn":21},{"ruleId":"132","severity":1,"message":"160","line":20,"column":12,"nodeType":"134","messageId":"135","endLine":20,"endColumn":25},{"ruleId":"132","severity":1,"message":"161","line":20,"column":27,"nodeType":"134","messageId":"135","endLine":20,"endColumn":43},{"ruleId":"132","severity":1,"message":"162","line":23,"column":11,"nodeType":"134","messageId":"135","endLine":23,"endColumn":33},{"ruleId":"151","severity":1,"message":"152","line":69,"column":11,"nodeType":"153","endLine":69,"endColumn":68},{"ruleId":"147","severity":1,"message":"163","line":30,"column":3,"nodeType":"149","endLine":30,"endColumn":16,"suggestions":"164"},{"ruleId":"151","severity":1,"message":"152","line":35,"column":17,"nodeType":"153","endLine":35,"endColumn":58},{"ruleId":"132","severity":1,"message":"165","line":2,"column":16,"nodeType":"134","messageId":"135","endLine":2,"endColumn":24},{"ruleId":"132","severity":1,"message":"166","line":2,"column":26,"nodeType":"134","messageId":"135","endLine":2,"endColumn":35},{"ruleId":"132","severity":1,"message":"166","line":3,"column":27,"nodeType":"134","messageId":"135","endLine":3,"endColumn":36},{"ruleId":"132","severity":1,"message":"159","line":15,"column":13,"nodeType":"134","messageId":"135","endLine":15,"endColumn":21},{"ruleId":"151","severity":1,"message":"152","line":37,"column":21,"nodeType":"153","endLine":37,"endColumn":60},{"ruleId":"147","severity":1,"message":"167","line":56,"column":8,"nodeType":"149","endLine":56,"endColumn":22,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","'REACT_APP_SERVER_URL' is assigned a value but never used.","'notification' is assigned a value but never used.","'ShowNotifs' is defined but never used.","'sendMessage' is assigned a value but never used.","'newMessage' is assigned a value but never used.","'setNewMessage' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property catch.","MemberExpression","unexpectedWhitespace",{"range":"171","text":"172"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getMyInfo' and 'getRandomUser'. Either include them or remove the dependency array.","ArrayExpression",["173"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'text' is assigned a value but never used.","'handleRoomNameChange' is assigned a value but never used.","'messages' is assigned a value but never used.","'notifications' is assigned a value but never used.","'setNotifications' is assigned a value but never used.","'handleNewMessageChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getImage'. Either include it or remove the dependency array.",["174"],"'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'alertsLength' and 'length'. Either include them or remove the dependency array. You can also do a functional update 'setAlertsLength(a => ...)' if you only need 'alertsLength' in the 'setAlertsLength' call.",["175"],"no-global-assign","no-unsafe-negation",[2187,2189],".",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [props.user.email, messages, getRandomUser, getMyInfo]",{"range":"182","text":"183"},"Update the dependencies array to be: [getImage, props.email]",{"range":"184","text":"185"},"Update the dependencies array to be: [alertsLength, length, props.alerts]",{"range":"186","text":"187"},[2762,2790],"[props.user.email, messages, getRandomUser, getMyInfo]",[632,645],"[getImage, props.email]",[1816,1830],"[alertsLength, length, props.alerts]"]