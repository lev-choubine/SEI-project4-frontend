{"version":3,"sources":["utils/setAuthToken.js","components/Navbar.js","components/Footer.js","components/LandingPage.js","components/ImageUploadRegister.js","components/auth/Signup.js","components/auth/Login.js","components/chat/useChat.js","components/Swipe.js","components/chat/Chat.js","components/Response.js","components/ShowNotifs.js","components/Sort.js","components/ImageUpload.js","components/Image.js","components/DisplayOthers.js","components/Others.js","components/Notifications.js","App.js","reportWebVitals.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","Navbar","props","className","isAuth","alt","user","name","src","image_url","class","onClick","notification","document","querySelector","id","window","location","href","style","display","handleLogout","to","Footer","LandingPage","ImageUploadRegister","handleImageUpload","files","formData","FormData","append","fetch","method","body","then","res","json","a","link","url","alert","photo","state","imageUrl","imageAlt","redirect","this","type","Component","Signup","useState","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setRedirect","age","setAge","bio","setBio","gender","setGender","preference","setPreference","setLocation","setPhoto","handleGender","e","target","value","handleSubmit","preventDefault","length","newUser","post","process","response","catch","error","onSubmit","htmlFor","onChange","parseInt","for","REACT_APP_SERVER_URL","Login","info","userData","online","data","localStorage","setItem","decoded","jwt_decode","nowCurrentUser","NEW_CHAT_MESSAGE_EVENT","useChat","roomId","image","messages","setMessages","socketRef","useRef","useEffect","current","socketIOClient","query","on","message","incomingMessage","ownedByCurrentUser","senderId","disconnect","sendMessage","messageBody","emit","Swipe","setLastDirection","_id","me","pic","time","Date","now","newMessage","setNewMessage","status","swiped","direction","nameToDelete","toggle","notificationData","content","date","my_id","read","err","handleSendMessage","onSwipe","dir","onCardLeftScreen","Chat","room","reload","map","i","placeholder","event","saveMessage","Response","chat","getElementById","ShowNotifs","alerts","alertsLength","setAlertsLength","setReload","p","index","Axios","refresh","from_sender","filter","item","Sort","setAlerts","setRefresh","get","notifications","randomUser","my_email","ImageUpload","displayImageUploader","cancelUploadImage","Image","console","log","DisplayOthers","setNotifications","route","Others","Notifications","match","params","account","setAccount","setPic","setInfo","getRandomUser","profile","PrivateRoute","component","rest","getItem","render","App","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","jwtToken","removeItem","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.2d7b3beb.chunk.js","sourcesContent":["import axios from 'axios';\n\n// this utility will add the authorized user's JWT to the request header\n// any routes that are protected will require the JWT in order to access them\n\nfunction setAuthToken(token) {\n    if (token) {\n        // Apply the token to every request header\n        axios.defaults.headers.common['Authorization'] = token;\n        // console.log('--- Headers ---');\n        // console.log(axios.defaults.headers.common);\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n};\n\nexport default setAuthToken;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = (props) => {\n    // console.log(props.user)\n    function revealProfile(){\n        if(!document.querySelector('#profile')){\n            let notification\n                if (props.user) {notification = `/chat/${props.user.id}`}\n                    window.location.href=notification \n       }\n     \n        document.querySelector('#profile').style.display=\"block\";\n        document.querySelector('#home').style.display=\"none\";\n    }\n\n  \n    function revealHome(){\n        if(!document.querySelector('#profile')){\n            let notification\n                if (props.user) {notification = `/chat/${props.user.id}`}\n                    window.location.href=notification \n        }\n        document.querySelector('#home').style.display=\"block\";\n        document.querySelector('#profile').style.display=\"none\";\n    }\n\n    return (\n        <nav className=\"nav\">\n         \n                {/* <Link className=\"navbar-brand\" to=\"/\">Reveal</Link> */}\n                \n               \n                    {\n                        props.isAuth \n                         \n                        ? <div>\n                            <div className=\"userNav\">\n                         <div >\n                            <img alt={props.user.name} src={props.user.image_url} class=\"iconPic2\"/>\n                         </div>\n                         <div className=\"namaewa\">\n                            {props.user.name}\n                         </div>\n                         <div className=\"namaewa\"> \n                            <button  className=\"namaewa navbutton\" onClick={revealHome}>Home</button>\n                            </div>\n                            <div className=\"namaewa\">\n                                <button  className=\"namaewa navbutton\" onClick={revealProfile}>Profile</button>\n                            </div>\n                            \n                            <div className=\"namaewa\">\n                                <span onClick={props.handleLogout} className=\"nav-link logout-link\">Logout</span>\n                            </div>\n                         \n                            </div>\n                             \n                           \n                           \n    \n                        \n                        </div>\n                        : <div className=\"userNav2\">\n                            <div className=\"namaewa one\">\n                        \n                                <NavLink  to=\"/signup\">Create Account</NavLink>\n                             </div>\n                           \n                            <div className=\"namaewa two\">\n                                <NavLink className=\"nav-link\"  to=\"/login\">Login</NavLink>\n                            </div>\n                            </div>\n                        \n                    }\n               \n          \n        </nav>\n    );\n}\nexport default Navbar;","import React from 'react';\n\nfunction Footer() {\n    return(\n        <footer className=\"footer bg-dark\">\n            <div className=\"container text-center\">\n                <span>セトオストーケン</span>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","function LandingPage() {\n    return(\n        <div>\n         \n                <div>\n                    <h1 className=\"landing-header\">Token</h1>\n                    <img className=\"landing-pic\" src=\"https://res.cloudinary.com/dok4pz3i3/image/upload/v1611757637/foptixzgdufugkds2vgg.jpg\"></img>\n                </div>\n      \n\n        </div>\n    )\n}\n\nexport default LandingPage;","import React, { Component } from 'react'\nclass ImageUploadRegister extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            imageUrl: null,\n            imageAlt: null,\n            redirect: false,\n        }\n    }\n\n    handleImageUpload = () => {\n      \n        const { files } = document.querySelector('input[type=\"file\"]')\n        const formData = new FormData();\n        formData.append('file', files[0]);\n        // replace this with your upload preset name\n        formData.append('upload_preset', 'ml_default')\n        const options = {\n          method: 'POST',\n          body: formData,\n        };\n\n        return fetch('https://api.Cloudinary.com/v1_1/dok4pz3i3/image/upload', options)\n          .then(res => res.json())\n          .then(async(res) => {\n              const link = res.url;\n              if(!link){\n                alert('Must choose a file to upload!')\n                return\n              }\n             \n                 \n                 this.props.photo(link)\n              \n              // console.log(this.props.email)\n              // console.log(link)\n              \n            })\n          \n  }\n\n    render() { \n        const { imageUrl, imageAlt } = this.state;\n        return ( \n            <div>\n                <section className=\"left-side\">\n                    <form>\n                    <div className=\"choosePicForm\">\n                      <div id=\"choose-file-btn-div\" class=\"btn btn-light\">\n                        <div id=\"choose-file-sub-div\">choose file</div>\n                        <input id=\"choose-file-btn\" className=\"chooseFile\" type=\"file\" class=\"hide_file\"/>\n                      </div>\n\n                        <div>\n                          <button type=\"button\" className=\"submitPhoto btn btn-light\" onClick={this.handleImageUpload}>Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                </section>\n                <section className=\"right-side\">\n                    {imageUrl && (\n                    <img src={imageUrl} alt={imageAlt} className=\"displayed-image\"/>\n                    )}\n                </section>\n            </div>\n        );\n    }\n}\n \nexport default ImageUploadRegister;","// Imports\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport ImageUploadRegister from '../ImageUploadRegister'\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\nconst Signup = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n    const [age, setAge] = useState('');\n    const [bio, setBio] = useState('');\n    const [gender, setGender] = useState('');\n    const [preference, setPreference] = useState('');\n    const [location, setLocation] = useState('')\n    const [photo, setPhoto] = useState('');\n    const handleName = (e) => {\n        setName(e.target.value);\n    }\n    //////////////////////\n    const handleAge = (e) => {\n        setAge(parseInt(e.target.value));\n        // console.log(age)\n        // console.log(typeof age)\n    }\n    const handleBio = (e) => {\n        setBio(e.target.value);\n    }\n    const handleGender = (e) => {\n        setGender(e.target.value);\n    }\n    const handlePreference = (e) => {\n        setPreference(e.target.value);\n    }\n    const handleLocation = (e) => {\n        setLocation(e.target.value);\n    }\n    const handlePhoto = (e) => {\n        setPhoto(e.target.value);\n    }\n    const handleEmail = (e) => {\n        setEmail(e.target.value);\n    }\n    const handlePassword = (e) => {\n        setPassword(e.target.value);\n    }\n    const handleConfirmPassword = (e) => {\n        setConfirmPassword(e.target.value);\n    }\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        // console.log(typeof age)\n        if (password === confirmPassword && password.length >= 8 && age >17 && photo!==\"\" && age !== \"\" && name!==\"\" && gender!==\"\" && preference !== \"\" && location !== \"\") {\n            const newUser = { name, email, password, age, gender, bio, preference, location, photo };\n            await axios.post(`${REACT_APP_SERVER_URL}/api/users/register`, newUser)\n            .then(response => {\n                // console.log(response);\n                setRedirect(true);\n            })\n            .catch(error => {\n                // console.log(error); \n                alert('Email already in use')\n            })\n        } else if (password !== confirmPassword) {\n                alert('Password confirmation does not match password')\n        } else if (password.length < 8){\n            alert('Password must be at least 8 characters')\n        } else if (age < 18 || age === ''){\n            alert('Must be 18 or over')\n        } else if (photo===\"\"){\n            alert(\"must upload image\")\n        } else if (name===\"\"){\n            alert(\"must register a name\")\n        } else if (gender===\"\"){\n            alert(\"must specify gender\")\n        } else if (gender===\"\"){\n             alert(\"must specify preference\")\n        } else if (location === '') {\n            alert(\"Please select your location\")\n        }\n    }\n    if (redirect) return <Redirect to='/login' />\n    return (\n        <div className=\"row mt-4\">\n            <div className=\"col-md-7 offset-md-3\">\n                <div className=\"card card-body\">\n                    <h2 className=\"py-2\">Signup</h2>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name\">Name</label>\n                            <input type=\"text\" name=\"name\" value={name} onChange={handleName} className=\"form-control\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"email\" name=\"email\" value={email} onChange={handleEmail} className=\"form-control\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"password\" name=\"password\" value={password} onChange={handlePassword} className=\"form-control\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                            <input type=\"password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleConfirmPassword} className=\"form-control\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"age\">Age (must be over 18)</label>\n                            <input type=\"number\" name=\"age\" value={age} onChange={handleAge} className=\"form-control\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"location\">Location</label>\n                            <select name=\"location\" id=\"location-drop-down\" onChange={handleLocation}>\n                                <option value=\"\">Select your location</option>\n                                <option value=\"Atlanta, GA\">Atlanta, GA</option>\n                                <option value=\"Austin, TX\">Austin, TX</option>\n                                <option value=\"Boston, MA\">Boston, MA</option>\n                                <option value=\"Cleveland, OH\">Cleveland, OH</option>\n                                <option value=\"DC\">DC</option>\n                                <option value=\"Denver, CO\">Denver, CO</option>\n                                <option value=\"El Paso, TX\">El Paso, TX</option>\n                                <option value=\"Jacksonville, FL\">Jacksonville, FL</option>\n                                <option value=\"Kansas City, KS\">Kansas City, KS</option>\n                                <option value=\"Las Vegas, NV\">Las Vegas, NV</option>\n                                <option value=\"Los Angeles, CA\">Los Angeles, CA</option>\n                                <option value=\"Miami, FL\">Miami, FL</option>\n                                <option value=\"Minneapolis, MN\">Minneapolis, MN</option>\n                                <option value=\"Nashville, TN\">Nashville, TN</option>\n                                <option value=\"New York, NY\">New York, NY</option>\n                                <option value=\"Oakland, CA\">Oakland, CA</option>\n                                <option value=\"Philadelphia, PA\">Philadelphia, PA</option>\n                                <option value=\"Phoenix, AZ\">Phoenix, AZ</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Bio\">Bio</label>\n                            <input type=\"text\" name=\"bio\" value={bio} onChange={handleBio} className=\"form-control\" />\n                       </div>\n                       <div className=\"form-group\">\n                            <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\" onChange={handleGender}/>\n                            <label for=\"male\">Male</label><br />\n                            <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\" onChange={handleGender}/>\n                            <label for=\"female\">Female</label><br/>\n                       </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"Preference\">Preference</label>\n                            <select name=\"preference\" id=\"preference\"  onChange={handlePreference}>\n                                <option value=\"\">Select your preference</option>\n                                <option value=\"Male\">Male</option>\n                                <option value=\"Female\">Female</option>\n                                <option value=\"Both\">Both</option>\n                            </select>\n                        </div>\n                        <div>\n                            <p>Upload your profile picture</p>\n                            <ImageUploadRegister photo={setPhoto}/>\n                            <input type=\"hidden\" name=\"photo\" value={photo} onChange={handlePhoto} className=\"form-control\" />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary float-right\" >Submit</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Signup;","// Imports\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { Redirect } from 'react-router-dom';\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nconst Login = (props) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleEmail = (e) => {\n        setEmail(e.target.value);\n    }\n\n    const handlePassword = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const userData = { email, password };\n        const info = {\n            email: userData.email,\n            online: true\n        }\n        await axios.post(`${REACT_APP_SERVER_URL}/api/users/login`, userData)\n        .then(response => {\n            const { token } = response.data;\n            // console.log(response.data)\n            // Save token to localStorage\n            localStorage.setItem('jwtToken', token);\n            // Set token to auth header\n            setAuthToken(token);\n            // Decode token to get the user data\n            const decoded = jwt_decode(token);\n            // Set current user\n            props.nowCurrentUser(decoded);\n            axios.post(`${REACT_APP_SERVER_URL}/api/users/profile/status`, info)\n        })\n        .catch(error =>{\n            // console.log(error);\n            alert('Either email or password is incorrect')\n        })\n    } \n    let notification\n    if (props.user) {notification = `/chat/${props.user.id}`}\n    if (props.user) return <Redirect to={notification} />\n\n    return (\n        <div className=\"row mt-4\">\n            <div className=\"col-md-7 offset-md-3\">\n                <div className=\"card card-body\">\n                    <h2 className=\"py-2\">Login</h2>\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\">Email</label>\n                            <input type=\"email\" name=\"email\" value={email} onChange={handleEmail} className=\"form-control\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"password\" name=\"password\" value={password} onChange={handlePassword} className=\"form-control\" />\n                        </div>\n                        \n                        <button type=\"submit\" className=\"btn btn-primary float-right\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\"; // Name of the event\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\nconst SOCKET_SERVER_URL = REACT_APP_SERVER_URL\n\nconst useChat = (roomId, user, id, type, image) => {\n  const [messages, setMessages] = useState([]); // Sent and received messages\n  const socketRef = useRef();\n  useEffect(() => {\n    // Creates a WebSocket connection\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: { roomId },\n    });\n\n    // Listens for incoming messages\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\n      const incomingMessage = {\n        ...message,\n        ownedByCurrentUser: message.senderId === socketRef.current.id,\n      };\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n\n    // Destroys the socket reference\n    // when the connection is closed\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId]);\n\n  // Sends a message to the server that\n  // forwards it to all users in the same room\n  const sendMessage = (messageBody) => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n    //   senderId: socketRef.current.id\n      senderId: user,\n      id: id,\n      type: type,\n      image: image\n    });\n  };\n  \n  return { messages, sendMessage };\n};\n\nexport default useChat;","import useChat from \"./chat/useChat\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport TinderCard from 'react-tinder-card'\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Swipe(props) {\n  const [lastDirection, setLastDirection] = useState()\n  \n  \n    const roomId = props.user._id; \n    const user = props.me // Gets roomId from URL\n    const id = props.id\n    const type =\"swipe\"\n    const image =props.pic\n    const time = Date.now()\n    // console.log(props)\n    const { messages, sendMessage } = useChat(roomId, user, id, type, image, time); // Creates a websocket and manages messaging\n    const [newMessage, setNewMessage] = useState(`I like your profile!`);\n    // const [account, setAccount] = useState([]);\n    const [notifications, setNotifications] = useState([])\n \n  \n    const handleNewMessageChange = (event) => {\n      setNewMessage(event.target.value);\n      // console.log(props.user.name)\n      \n      // console.log(user + '!!!!!!')\n    };\n\n    \n  \n    const handleSendMessage = () => {\n      // document.getElementById(props.user.image_url).style.display=\"none\";\n      // console.log(roomId);\n      sendMessage(newMessage);\n      setNewMessage(`Your profile was liked by ${props.me}`);\n      // alert(\"Your like has been sent!!\")\n\n      const notificationData = {\n        id: props.id,\n        content: `${props.me} liked your profile!`,\n        date: Date.now(),\n        my_id: roomId,\n        type: 'swipe',\n        read: false,\n        pic: props.pic,\n        email: props.user.email,\n        name: props.me,\n        online: props.status\n      }\n      \n\n      axios.post(`${REACT_APP_SERVER_URL}/api/users/notifications`, notificationData)\n      .then(res => {\n        props.toggle()\n      //   console.log('swiped right')\n      //   console.log(res);\n      }).catch(err => {\n      //   console.log(err);\n      })\n    };\n\n    const handleSwipeChange = () =>{\n      // document.querySelector('.this').style.display=\"block\";\n      \n      props.toggle()\n      // console.log('swiped left')\n    }\n\n    const status = (status) => {\n      if(status === true) {\n        return 'Online'\n      } else {\n        return 'Offline'\n      }\n    }\n\n    const swiped = (direction, nameToDelete) => {\n      if (direction === 'left') {\n        handleSwipeChange()\n      } else {\n        handleSendMessage()\n      }\n      // console.log('removing: ' + nameToDelete)\n      setLastDirection(direction)\n    }\n  \n    const outOfFrame = (name) => {\n      // console.log(name + ' left the screen!')\n    }\n\n\n    // console.log(status)\n    return(\n      <div>\n        \n        {props.user.length===0\n            ?\n            <p>Sorry We Couldn't Find Anyone in your area!</p> \n            :\n          <div className=\"like-button\">\n            {/* <div className=\"like\">\n        <button className=\"swipe\" onClick={handleSwipeChange}>❌</button>\n        </div> */}\n          <div id=\"me\">\n            <div>\n              <div id='tinder'>\n                <TinderCard className='swipe' key={Date.now()} onSwipe={(dir) => swiped(dir, props.user.name)} onCardLeftScreen={() => outOfFrame(props.user.name)}>\n                <div>\n                  <img className={status(props.user.online)} src={props.user.image_url} />\n                </div>\n                </TinderCard>\n              </div>\n            \n          {/* {lastDirection ? <h2 className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText' />} */}\n          <div id=\"information\">\n          <p id=\"user-name\">{props.user.name}</p>\n          <div id=\"adduressu\">\n            <div id=\"swipe-info\">\n              <p>{props.user.age}</p> \n              <p>{props.user.bio}</p> \n              <p>{props.user.location}</p>\n              {/* <p>{props.user.gender}</p>  */}\n              {/* <p>Likes: {props.user.preference}</p> */}\n              <p>{status(props.user.online)}</p> \n            </div>\n          </div>\n          </div>\n          </div>\n        \n          </div>\n          {/* <div className=\"like\">\n          <button id={props.user.image_url} onClick={handleSendMessage} className=\"swipe this\">\n            💙\n          </button>\n          </div> */}\n          </div>\n            \n        }\n            \n        </div>\n    )\n}\n\nexport default Swipe;","import React,{useState} from \"react\";\nimport useChat from \"./useChat\"\nimport axios from 'axios'\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nconst Chat = (props) => {\n  /////////////////////\n  \n  const roomId = props.room\n  const user = props.me // Gets roomId from URL\n  const id = props.room\n  const type =\"chat\"\n  const image =props.pic\n  const time = Date.now()\n  // console.log(props)\n  const { messages, sendMessage } = useChat(roomId, user, id, type, image); // Creates a websocket and manages messaging\n  const [newMessage, setNewMessage] = useState(``);\n \n  /////////////////////\n    const [text, setText] = useState(\"\");\n    const handleRoomNameChange = (event) => {\n    setText(event.target.value);\n  };\n\nprops.reload(messages)\nconst handleSendMessage = (e) => {\n  if(newMessage === ''){\n    return\n  }\n\n  \n  sendMessage(newMessage);\n  setNewMessage(e.target.value);\n  \n  const notificationData = {\n    id: props.id,\n    content: `Missed message: ${newMessage}`,\n    date: Date.now(),\n    my_id: props.saveMessage,\n    type: 'chat',\n    read: false,\n    pic: props.pic,\n    email: props.email,\n    name: props.me\n  }\n\n  axios.post(`${REACT_APP_SERVER_URL}/api/users/notifications`, notificationData)\n  .then(res => {\n    // console.log(`message to ${props.saveMessage}`)\n  }).catch(err => {\n    // console.log(err);\n  })\n  \n\n};\n\nconst handleNewMessageChange = (event) => {\n  \n  setNewMessage(event.target.value);\n \n};\n\n  return (\n    \n    <div className=\"home-container\">\n    \n  {messages.map((message, i) => (\n    \n    <div >\n    <p\n      key={i}\n      className={`message-item ${\n        message.ownedByCurrentUser ? \"my-message\" : \"received-message\"\n      }`}\n    > \n      <div>\n      </div>\n      <div className=\"chat-div\" >\n      { props.me === message.senderId?\n      <div className=\"youSay\">\n            <img className=\"iconPic\" src={message.image}/>\n            <p className=\"chat-body\"> {message.body}</p>  \n      </div>\n      :\n      <div className=\"they-say\">\n          <img className=\"iconPic\" src={message.image}/>\n          <p className=\"chat-names\">{message.senderId}</p>\n          <p className=\"chat-body\"> {message.body}</p>\n      </div>\n} \n     </div>\n    </p>\n\n    </div>\n  )\n)\n}\n\n\n<div id={messages.time}>\n      <input\n        className=\"imputtowa\"\n        type=\"text\"\n        placeholder=\"enter message\"\n        value={newMessage}\n        onChange={handleNewMessageChange}\n        // className=\"text-input-field\"\n      />\n      <button className=\"send\" id={props.room+props.me}onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n    \n  );\n  \n};\n\nexport default Chat;","import useChat from \"./chat/useChat\";\nimport Chat from \"./chat/Chat\"\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Response (props){\n    \n    const roomId = props.room; \n    const user = props.name // Gets roomId from URL\n    const id = props.id\n    const type = \"chat\"\n    const image = props.pic\n \n    const { messages, sendMessage } = useChat(roomId, user, id, type, image ); // Creates a websocket and manages messaging\n    const [newMessage, setNewMessage] = useState(\"Let's Chat\");\n \n    const handleSendMessage = () => {\n     \n        document.getElementById(`${props.room}`).style.display=\"block\"\n        document.getElementById(`${props.room+props.id}`).style.display=\"none\"\n        // console.log(props.email);\n        sendMessage(newMessage);\n        setNewMessage(\"liked\");\n        props.reload(\"me\")\n        props.reload(\"you\")\n/////////////////////////////////////\nconst notificationData = {\n    id: props.id,\n    content: `${props.name} wants to chat`,\n    date: Date.now(),\n    my_id: props.room,\n    type: 'chat',\n    read: false,\n    pic: props.pic,\n    email: props.email,\n    name: props.name\n  }\n\n  axios.post(`${REACT_APP_SERVER_URL}/api/users/notifications`, notificationData)\n  .then(res => {\n    // console.log(res);\n  }).catch(err => {\n    // console.log(err);\n  })\n//////////////////////////////////////////////////////////////////\n};\n    \n  \n    const handleChat =()=>{\n        document.getElementById(`${props.room}`).style.display=\"block\"\n    }\n \n  return (\n       <div>\n            \n           {\n            props.type===\"chat\" ?\n       \n              \n                <div className=\"blue\" id={props.room}>\n                  \n                     <Chat  room={props.id+props.room} me={props.name} id={props.id} type={\"chat\"} pic={props.pic} reload={props.reload} saveMessage={props.room} />\n                     {/* <button onClick={handleChat}>Initiate Chat</button> */}\n                </div>\n              \n                \n               :\n                <div>\n                    <div className=\"chat\" id={props.room}>\n                        <Chat saveMessage={props.room} chat={handleChat} room={props.room+props.id} me={props.name} id={props.id} type={\"chat\"} pic={props.pic} reload={props.reload}/>\n                    </div>\n                    <button  id={props.room+props.id} onClick={handleSendMessage}>Chat</button>\n                </div>\n\n           }\n           \n            \n       </div>\n       \n    )\n}\n\nexport default Response;","import { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport Response from './Response'\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction ShowNotifs(props) {\n\n    const [alertsLength, setAlertsLength] = useState(props.alerts.length)\n    const [reload, setReload] = useState('')\n    // let alertsLength = 0\n   \n    const alerts = props.alerts.map((p, index) => {\n        const handleShowNotifDetails = () => {\n            if (p.read === true) {\n                setAlertsLength(alertsLength - 1)\n            }\n            // console.log(p.email+index);\n            // if(!p.email[index]){\n\n            // }else{\n                document.getElementById(`${p.email+index}`).style.display=\"block\"\n            // }\n           \n\n            const userData = {\n                email: p.email,\n                id: p._id,\n                user: p.my_id\n            }\n           \n            Axios.post(`${REACT_APP_SERVER_URL}/api/users/notifications/read`, userData)\n            .then(res => {\n                props.refresh('auth token')\n                props.refresh('app.js')\n                \n            }).catch(err => {\n                // console.log(err)\n            })\n        }\n\n    \n        return(\n            <div>\n                { p.read === false ? \n                <div>\n                    \n                    <img src={p.pic} className=\"iconPic\" />\n                    <button className=\"yourName\" onClick={handleShowNotifDetails}>Hide</button>\n                    <p id={p.email+index} className=\"single-notif\">{p.content}</p>\n                    <div class=\"chatBox\">\n                        <Response reload={setReload} room={p.from_sender} name={props.me} id ={p.my_id} email={p.email} type={p.type} pic={props.pic}/>\n                    </div>\n                    <hr />\n                </div>\n                :\n                <div></div>\n                }\n            </div>\n        )\n    })\n\n    useEffect(() => {\n        setAlertsLength(props.alerts.length)\n\n        setAlertsLength(alertsLength - length)\n    }, [props, reload])\n\n    const handleShowNotifications = () => {\n\n        document.getElementById('my-alerts').style.display=\"block\"\n        document.getElementById('hide-notifs').style.display=\"block\"\n    }\n    const handleHideNotifications = () => {\n        document.getElementById('my-alerts').style.display=\"none\"\n        document.getElementById('hide-notifs').style.display=\"none\"\n    }\n\n    const length = props.alerts.filter(function(item){\n        return item.read;\n    }).length;\n\n    return(\n    <div>\n        <button id=\"notifyId\" onClick={handleShowNotifications}>Notifications ({props.alerts.length - length})</button>\n        <button id=\"hide-notifs\" onClick={handleHideNotifications}>Hide Notifications</button>\n        <div id=\"my-alerts\">\n            {alerts}\n        </div>\n    </div>\n    )\n}\n\nexport default ShowNotifs;","import React, { useState, useEffect} from 'react'\nimport Swipe from './Swipe'\nimport ShowNotifs from './ShowNotifs'\nimport axios from 'axios';\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Sort(props) {\n\nconst [alerts, setAlerts]= useState([]) \nconst [refresh, setRefresh] = useState('')\n  \n// console.log(props.status)\n\nuseEffect(()=>{\n    axios.get(`${REACT_APP_SERVER_URL}/api/users/myinfo/${props.email}`).\n    then(res=>{\n        setAlerts(res.data.user[0].notifications)\n    }).catch(err=>{\n        // console.log(err)\n    })\n\n\n    // console.log(props.email)\n}, [props.email, props.messages, refresh])\n\nconst randomUser = props.user ? props.user : ''\n// console.log(randomUser)\n    return(\n        <div id=\"here\" >\n       \n        \n         \n         \n             \n           <div id=\"home\">\n           <Swipe toggle={props.toggle} user={randomUser} pic={props.pic} id={props.id} me={props.me} room={props.user._id}/>\n              </div>\n              <div id=\"red\">\n         <ShowNotifs alerts={alerts} me={props.me} my_email={props.email} pic={props.pic} messages={props.messages} refresh={setRefresh} />\n         </div>\n   \n</div>\n    )\n}\n\nexport default Sort;","import React, { Component } from 'react'\nimport Axios from 'axios'\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL\n\nclass ImageUpload extends Component {\n  constructor(props) {\n      super(props);\n      this.state = { \n          imageUrl: null,\n          imageAlt: null,\n          redirect: false,\n      }\n  }\n\n  handleImageUpload = () => {\n    \n    const { files } = document.querySelector('input[type=\"file\"]')\n    const formData = new FormData();\n    formData.append('file', files[0]);\n    // replace this with your upload preset name\n    formData.append('upload_preset', 'ml_default')\n    const options = {\n      method: 'POST',\n      body: formData,\n    };\n\n    return fetch('https://api.Cloudinary.com/v1_1/dok4pz3i3/image/upload', options)\n      .then(res => res.json())\n      .then(async(res) => {\n        const link = res.url;\n        if(!link){\n          alert('Must choose a file to upload!')\n          return\n        }\n        const userData ={\n            email: this.props.email,\n            image_url: link\n        }\n        // console.log(this.props.email)\n        // console.log(link)\n        await Axios.post(`${REACT_APP_SERVER_URL}/api/users/profile/setup/image`, userData)\n        .then( res=>{ \n          // console.log(res);\n        this.props.pic(true)\n        this.props.pic(false)\n        \n        })\n          .catch(err=>{\n            // console.log(err)\n          })\n      })\n          \n  }\n\n  displayImageUploader = () => {\n    document.getElementById('image-form').style.display=\"block\"\n    document.getElementById('cancel-image-upload').style.display=\"block\"\n    document.getElementById('update-pic-btn').style.display=\"none\"\n  }\n\n  cancelUploadImage = () => {\n    document.getElementById('image-form').style.display=\"none\"\n    document.getElementById('cancel-image-upload').style.display=\"none\"\n    document.getElementById('update-pic-btn').style.display=\"block\"\n  }\n\n  render() { \n    const { imageUrl, imageAlt } = this.state;\n    return ( \n      <div>\n        <section className=\"left-side\">\n          <div>\n            <button class=\"btn btn-outline-primary\" id=\"update-pic-btn\" onClick={this.displayImageUploader}>Update profile picture</button>\n          </div>\n\n\n          <form id=\"image-form\">\n            <div className=\"choosePicForm\">\n              <div id=\"choose-file-btn-div\" class=\"btn btn-outline-dark\">\n                <div id=\"choose-file-sub-div\">choose file</div>\n                <input id=\"choose-file-btn\" className=\"chooseFile\" type=\"file\" class=\"hide_file\"/>\n              </div>\n              \n              <div id=\"submit-button\">\n                <button class=\"btn btn-outline-success\" type=\"button\" onClick={this.handleImageUpload}>submit</button>\n              </div>\n            </div>\n          </form>\n          <div>\n            <button id=\"cancel-image-upload\" class=\"btn btn-outline-danger\" onClick={this.cancelUploadImage}>cancel</button>\n          </div>\n        </section>\n\n\n        <section className=\"right-side\">\n            {imageUrl && (\n            <img src={imageUrl} alt={imageAlt} className=\"displayed-image\"/>\n            )}\n        </section>\n\n      </div>\n    );\n  }\n}\n \nexport default ImageUpload;","import Axios from 'axios'\nimport { useState, useEffect } from 'react'\n\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Image (props) {\n    const [pic, setPic]=useState(props.pic)\n    const[photo, setPhoto]=useState([])\n    \n    function getImage(url){\n        if(!props.email){\n            return\n        }\n        Axios.get(url)\n        .then(res=>{\n            // console.log(res.data)\n            setPhoto(res.data.user[0].image_url)\n            console.log('hi!!!!')\n           })\n        .catch(err=>{\n            // console.log(err)\n        })\n    }\n\n\n    useEffect (()=>{\n        getImage(`${REACT_APP_SERVER_URL}/api/users/myphoto/${props.email}`)\n\n    },[props.email, props.pic])\n   \n \n        return(\n            <div>\n                <img className=\"profilePic\" src={photo}/>\n            </div>\n        )\n}\n\nexport default Image;","import { useEffect, useState } from 'react'\n// import ShowNotifs from './ShowNotifs';\nimport Axios from 'axios'\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction DisplayOthers(props){\n\n    const [notifications, setNotifications] = useState([])\n\n    useEffect(()=> {\n\n        function getMyInfo(route) {\n            if(!props.info.email){\n              return\n            }\n            \n            Axios.get(route)\n            .then(res =>{\n            //   console.log(props.user.email)\n            //   console.log(res.data)\n              setNotifications(res.data.user[0].notifications)\n            //   console.log(info) \n            })\n            .catch(err=>{\n                // console.log(err)\n            })\n        }\n        // console.log(notifications);\n        getMyInfo (`${REACT_APP_SERVER_URL}/api/users/myinfo/${props.info.email}`)\n    }, [props])\n\n    return(\n        <div>\n             <div id=\"showNotifsDiv\">\n           \n            </div>\n            <div id=\"my-prof-info\">\n                <p>{props.info.age}</p>\n                <p>{props.info.bio}</p>\n                <p>{props.info.gender}</p>\n                <p> {props.info.location}</p>\n                <p id=\"preference\">Preference: {props.info.preference}</p>\n\n            </div>\n           \n        </div>\n    )\n}\n\nexport default DisplayOthers;","import DisplayOthers from './DisplayOthers'\n\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nfunction Others (props){\n  // console.log(props.user)\n\n    return(\n        <div>\n          <h5 id=\"name-on-prof\">{props.user.name}</h5>\n          <DisplayOthers info={props.info} />\n        </div>\n    )\n}\n\nexport default Others","\nimport Axios from 'axios'\nimport React, { useEffect, useState } from \"react\";\nimport useChat from \"./chat/useChat\";\nimport Sort from './Sort'\nimport ImageUpload from './ImageUpload'\nimport Image from './Image'\nimport Others from './Others'\nimport Response from './Response'\n\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nconst Notifications = (props) => {\n  // console.log(props.user)\n  const  { roomId } = props.match.params; \n  const user = props.user.name// Gets roomId from URL\n  const { messages, sendMessage } = useChat(roomId, user); // Creates a websocket and manages messaging\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [account, setAccount] = useState([]);\n  const [pic, setPic] = useState(false);\n  const [info, setInfo] = useState([]);\n  const [reload, setReload] = useState('')\n\n  // get random user\n  const getRandomUser = () => {\n\n    let route;\n\n    if (props.user.preference !== 'Both') {\n      route = `${REACT_APP_SERVER_URL}/api/users/users/${props.user.gender}/${props.user.preference}/${props.user.email}/${props.user.location}`\n    } else {\n      route = `${REACT_APP_SERVER_URL}/api/users/users/random/${props.user.gender}/${props.user.email}/${props.user.location}`\n    }\n  \n  \n  \n\n      Axios.get(route)\n\n      .then(res => {\n        // console.log(res.data.profile)\n        setAccount(res.data.profile)\n      \n      }) .catch(err => {\n        // console.log(err);\n    })\n  }\n\n  \n  function getMyInfo (route){\n    if(!props.user.email){\n      return\n    }\n    \n    Axios.get(route)\n    .then(res =>{\n      // console.log(props.user.email)\n      // console.log(res.data)\n      setInfo(res.data.user[0])\n      // console.log(info) \n      \n    })\n    .catch(err=>{\n        // console.log(err)\n    })\n  }\n  \n  useEffect(() => {\n    getRandomUser()\n    getMyInfo (`${REACT_APP_SERVER_URL}/api/users/myinfo/${props.user.email}`)\n    // setInterval(updateScroll,1000);\n    // document.querySelector('.chat-room-container').addEventListener('scroll', function(){\n    //   setScrolled(true);\n  // });\n  }, [props.user.email])\n\n  // console.log(info);\n  // const information = info && info.length ? info : ''\n  return (\n    <div id=\"master\">\n  <div id=\"profile\">\n  <Image email={props.user.email} pic={pic}/>\n  <div id=\"showNotifsDiv\">\n    <ImageUpload email={props.user.email} pic={setPic}/>\n    <Others user={props.user} info={info} email={props.user.email} pic={setPic}  pic={pic}/>\n  </div>\n  </div>\n    <div id=\"swipe\">\n  \n  <Sort user={account} me={props.user.name} id={props.user.id} email={props.user.email} status={info.online} pic={info.image_url} toggle={getRandomUser} messages={messages}/>\n  </div>\n \n        <div className=\"chat-room-container\" id=\"notify\" >\n      <div className=\"messages-container\">\n        <div className=\"messages-list\">\n          {messages.map((message, i) => (\n           \n            <p\n              key={i}\n              className={`message-item ${\n                message.ownedByCurrentUser ? \"my-message\" : \"received-message\"\n              }`}\n            > \n              {/* { props.user.id === roomId ? */}\n              \n              <div >\n                \n                <div class=\"chatBox\">\n                <img className=\"profilePic\" src={message.image}/>\n                  <p>{message.senderId}</p>\n              <p> {message.body}</p>\n              \n              \n              </div>\n              <div class=\"chatBox they-say\">\n                <Response room={message.id} name={props.user.name} id ={props.user.id} email={account.email} type={message.type} pic={info.image_url} reload={setReload}/>\n                </div>\n              </div> \n              {/* :  */}\n              <div></div>\n              {/* } */}\n            </p>\n          ))}\n        </div>\n      </div>\n    \n    </div>\n  \n\n    \n  </div>\n)};\n\nexport default Notifications;","import Axios from 'axios'\nimport React, { useEffect, useState } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport './App.css';\nimport './Profile.css';\nimport './Navbar.css';\n\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport LandingPage from './components/LandingPage'\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\n// import About from './Components/About';\nimport Notifications from \"./components/Notifications\"\nimport Chat from \"./components/chat/Chat\"\nconst REACT_APP_SERVER_URL = process.env.REACT_APP_SERVER_URL;\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const user = localStorage.getItem('jwtToken');\n  return <Route {...rest } render={(props) => {\n    return user ? <Component { ...rest } { ...props }/> : <Redirect to=\"/login\" />\n  }}/>\n}\n\nfunction App() {\n  // Set state values\n  const [currentUser, setCurrentUser] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n\n\n  \n\n\n\n  useEffect(() => {\n\n    let token;\n    // if there is no token in localStorage, then the user is in authenticated\n    if (!localStorage.getItem('jwtToken')) {\n      setIsAuthenticated(false);\n    } else {\n      token = jwt_decode(localStorage.getItem('jwtToken'));\n      setAuthToken(localStorage.jwtToken);\n      setCurrentUser(token);\n    }\n  }, []);\n\n  const nowCurrentUser = (userData) => {\n    // console.log('nowCurentUser is here...');\n    setCurrentUser(userData);\n    setIsAuthenticated(true);\n  }\n\n  const handleLogout = () => {\n    const info = {\n      email: currentUser.email,\n      online: false\n    }\n    Axios.post(`${REACT_APP_SERVER_URL}/api/users/profile/status`, info)\n    if (localStorage.getItem('jwtToken')) {\n      localStorage.removeItem('jwtToken');\n      setCurrentUser(null);\n      setIsAuthenticated(false);\n      return  <Redirect to=\"/\" />\n    }\n  }\n\n  const notification = currentUser ? `/chat/${currentUser.id}` : null\n\n  return (\n    <div className=\"App\">\n      <Navbar handleLogout={handleLogout} isAuth={isAuthenticated} user={currentUser} />\n      <div className=\"container mt-5\">\n        <Switch>\n          <Route path='/signup' component={Signup} />\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route \n            path='/login' \n            render={ (props) => <Login {...props} nowCurrentUser={nowCurrentUser} setIsAuthenticated={setIsAuthenticated} user={currentUser}/>} />\n          {/* <PrivateRoute path=\"/profile\" component={ Profile } user={currentUser}/> */}\n          <Route exact path=\"/chat\" component={Chat} user={currentUser}/>\n          <PrivateRoute exact path=\"/chat/:roomId\" component={Notifications}  user={currentUser} />\n         \n        \n        </Switch>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}